# Балтаев Даниил Артурович (ЭФБО-15-24)

# Задание 1. Задача: Ряды.

using System;

class Program
{
    static void PrintSeparator()
    {
        Console.WriteLine("+------------------------------------------------------------+");
    }

    static void PrintHeader()
    {
        PrintSeparator();
        Console.WriteLine("| Дисциплина: Программирование корпоративных систем          |");
        Console.WriteLine("| Рабочая тетрадь 2 — Циклы                                  |");
        Console.WriteLine("| Задание 1: Ряды (разложение e^x по Маклорену)              |");
        PrintSeparator();
    }

    static void PrintInstructions()
    {
        Console.WriteLine("| Описание:");
        Console.WriteLine("| - Программа вычисляет e^x через ряд Маклорена с точностью e.");
        Console.WriteLine("| - Также вычисляет n-й член ряда для заданных x и n.");
        Console.WriteLine("|");
        Console.WriteLine("| Формулы:");
        Console.WriteLine("|   e^x = Σ (x^n / n!), n = 0..∞");
        Console.WriteLine("|   a_n = x^n / n!");
        Console.WriteLine("|");
        Console.WriteLine("| Как пользоваться:");
        Console.WriteLine("|  1) Введите x (вещественное число, например: 1 или -0.5)");
        Console.WriteLine("|  2) Введите точность e (0 < e < 0.01), например: 0.001");
        Console.WriteLine("|  3) Введите номер члена n (целое n >= 0), например: 5");
        Console.WriteLine("|");
        Console.WriteLine("| Пример ввода:");
        Console.WriteLine("|   x = 1");
        Console.WriteLine("|   e = 0.001");
        Console.WriteLine("|   n = 5");
        PrintSeparator();
    }

    static double Factorial(int n)
    {
        if (n < 0)
        {
            throw new ArgumentOutOfRangeException(nameof(n), "n must be non-negative");
        }
        if (n == 0)
        {
            return 1.0;
        }
        double result = 1.0;
        for (int i = 1; i <= n; i++)
        {
            result *= i;
        }
        return result;
    }

    static double GetNthTerm(double x, int n)
    {
        return Math.Pow(x, n) / Factorial(n);
    }

    static double CalculateSeries(double x, double epsilon)
    {
        if (epsilon <= 0)
        {
            throw new ArgumentOutOfRangeException(nameof(epsilon), "epsilon must be positive");
        }

        double sum = 0.0;
        double term = 1.0; // первый член ряда (n = 0)
        int n = 0;

        while (Math.Abs(term) > epsilon)
        {
            sum += term;
            n++;
            term = Math.Pow(x, n) / Factorial(n);
        }

        return sum;
    }

    static void Main()
    {
        Console.Clear();
        PrintHeader();
        PrintInstructions();

        Console.WriteLine("| Введите x:");
        Console.Write("| > ");
        if (!double.TryParse(Console.ReadLine(), out double x))
        {
            Console.WriteLine("| Ошибка: некорректное значение x");
            PrintSeparator();
            return;
        }

        Console.WriteLine("| Введите точность (e < 0.01):");
        Console.Write("| > ");
        if (!double.TryParse(Console.ReadLine(), out double epsilon))
        {
            Console.WriteLine("| Ошибка: некорректное значение точности");
            PrintSeparator();
            return;
        }
        if (epsilon >= 0.01)
        {
            Console.WriteLine("| Ошибка: точность должна быть меньше 0.01");
            PrintSeparator();
            return;
        }
        if (epsilon <= 0)
        {
            Console.WriteLine("| Ошибка: точность должна быть положительной");
            PrintSeparator();
            return;
        }

        double result = CalculateSeries(x, epsilon);
        Console.WriteLine($"| Значение функции e^x с точностью {epsilon}: {result}");

        Console.WriteLine("|");
        Console.WriteLine("| Введите номер члена ряда (n >= 0):");
        Console.Write("| > ");
        if (!int.TryParse(Console.ReadLine(), out int n) || n < 0)
        {
            Console.WriteLine("| Ошибка: некорректное n (должно быть целым неотрицательным)");
            PrintSeparator();
            return;
        }

        double nthTerm = GetNthTerm(x, n);
        Console.WriteLine($"| Значение {n}-го члена ряда a_{n} = x^{n}/n!: {nthTerm}");
        PrintSeparator();
        Console.WriteLine("Нажмите Enter для выхода...");
        Console.ReadLine();
    }
}


# ВЫВОД задания 1.
+------------------------------------------------------------+
| Дисциплина: Программирование корпоративных систем          |
| Рабочая тетрадь 2 — Циклы                                  |
| Задание 1: Ряды (разложение e^x по Маклорену)              |
+------------------------------------------------------------+
| Описание:
| - Программа вычисляет e^x через ряд Маклорена с точностью e.
| - Также вычисляет n-й член ряда для заданных x и n.
|
| Формулы:
|   e^x = Σ (x^n / n!), n = 0..∞
|   a_n = x^n / n!
|
| Как пользоваться:
|  1) Введите x (вещественное число, например: 1 или -0.5)
|  2) Введите точность e (0 < e < 0.01), например: 0.001
|  3) Введите номер члена n (целое n >= 0), например: 5
|
| Пример ввода:
|   x = 1
|   e = 0.001
|   n = 5
+------------------------------------------------------------+
| Введите x:
| > 46
| Введите точность (e < 0.01):
| > 55
| Ошибка: точность должна быть меньше 0.01
+------------------------------------------------------------+



# Задание 2. Задача: Счастливый билет.


using System;

public static class Task2_LuckyTicket
{
    public static void Run()
    {
        Console.Clear();
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Задание 2: Счастливый билет                               |");
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Введите шестизначный номер билета (только цифры):");
        Console.Write("| > ");

        string? input = Console.ReadLine();
        if (!IsSixDigitNumber(input))
        {
            Console.WriteLine("| Ошибка: введите корректный шестизначный номер");
            Console.WriteLine("+------------------------------------------------------------+");
            Console.WriteLine("Нажмите Enter для выхода в меню...");
            Console.ReadLine();
            return;
        }

        // Без строк/массивов: преобразуем к числу и извлекаем цифры арифметикой
        int ticket = int.Parse(input!);

        int d1 = ticket / 100000;                // сотни тысяч
        int d2 = (ticket / 10000) % 10;          // десятки тысяч
        int d3 = (ticket / 1000) % 10;           // тысячи
        int d4 = (ticket / 100) % 10;            // сотни
        int d5 = (ticket / 10) % 10;             // десятки
        int d6 = ticket % 10;                    // единицы

        int sumFirst = d1 + d2 + d3;
        int sumLast  = d4 + d5 + d6;

        if (sumFirst == sumLast)
        {
            Console.WriteLine("| Билет счастливый!");
        }
        else
        {
            Console.WriteLine("| Билет обычный.");
        }

        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("Нажмите Enter для выхода в меню...");
        Console.ReadLine();
    }

    private static bool IsSixDigitNumber(string? s)
    {
        if (string.IsNullOrEmpty(s) || s.Length != 6)
        {
            return false;
        }
        int value = 0;
        for (int i = 0; i < s.Length; i++)
        {
            char c = s[i];
            if (c < '0' || c > '9')
            {
                return false;
            }
            // Переводим в число вручную, избегая массивов/коллекций в логике
            value = value * 10 + (c - '0');
        }
        // Проверяем, что действительно шестизначное число (не начинается с 0)
        return value >= 100000 && value <= 999999;
    }
}


# ВЫВОД задания 2.
+------------------------------------------------------------+
| Задание 2: Счастливый билет                               |
+------------------------------------------------------------+
| Введите шестизначный номер билета (только цифры):
| > 343244
| Билет счастливый!
+------------------------------------------------------------+



# Задание 3. Задача: Сокращение дроби.

using System;

public static class Task3_ReduceFraction
{
    public static void Run()
    {
        Console.Clear();
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Задание 3: Сокращение дроби                                |");
        Console.WriteLine("+------------------------------------------------------------+");

        Console.WriteLine("| Введите числитель M (целое):");
        Console.Write("| > ");
        if (!int.TryParse(Console.ReadLine(), out int m))
        {
            Console.WriteLine("| Ошибка: некорректное M");
            Finish();
            return;
        }

        Console.WriteLine("| Введите знаменатель N (целое, не 0):");
        Console.Write("| > ");
        if (!int.TryParse(Console.ReadLine(), out int n) || n == 0)
        {
            Console.WriteLine("| Ошибка: некорректное N (ноль запрещён)");
            Finish();
            return;
        }

        int gcd = Gcd(Math.Abs(m), Math.Abs(n));
        int numerator = m / gcd;
        int denominator = n / gcd;

        // Нормализуем знак: знаменатель всегда положительный
        if (denominator < 0)
        {
            numerator = -numerator;
            denominator = -denominator;
        }

        Console.WriteLine($"| Несократимая дробь: {numerator}/{denominator}");
        Finish();
    }

    private static int Gcd(int a, int b)
    {
        while (b != 0)
        {
            int t = b;
            b = a % b;
            a = t;
        }
        return a == 0 ? 1 : a;
    }

    private static void Finish()
    {
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("Нажмите Enter для выхода в меню...");
        Console.ReadLine();
    }
}


# ВЫВОД задания 3.
+------------------------------------------------------------+
| Задание 3: Сокращение дроби                                |
+------------------------------------------------------------+
| Введите числитель M (целое):
| > 343
| Введите знаменатель N (целое, не 0):
| > 33
| Несократимая дробь: 343/33
+------------------------------------------------------------+



# Задание 4. Задача: Угадай число (0..63).


using System;

public static class Task4_NumberGuesser
{
    public static void Run()
    {
        Console.Clear();
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Задание 4: Угадай число (0..63)                            |");
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Загадайте число от 0 до 63. Отвечайте '1' (да) или '0' (нет).");
        Console.WriteLine("+------------------------------------------------------------+");

        int[] masks = { 32, 16, 8, 4, 2, 1 };
        int lower = 0;
        int result = 0;

        foreach (int mask in masks)
        {
            Console.Write($"| Ваше число больше или равно {lower + mask}? (1/0): ");
            string? answer = Console.ReadLine();
            if (answer == "1")
            {
                result |= mask;
                lower += mask;
            }
        }

        Console.WriteLine($"| Ваше число: {result}");
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("Нажмите Enter для выхода в меню...");
        Console.ReadLine();
    }
}


# ВЫВОД задания 4.
+------------------------------------------------------------+
| Задание 4: Угадай число (0..63)                            |
+------------------------------------------------------------+
| Загадайте число от 0 до 63. Отвечайте '1' (да) или '0' (нет).
+------------------------------------------------------------+
| Ваше число больше или равно 32? (1/0): 0
| Ваше число больше или равно 16? (1/0): 1
| Ваше число больше или равно 24? (1/0): 1
| Ваше число больше или равно 28? (1/0): 0
| Ваше число больше или равно 26? (1/0): 1
| Ваше число больше или равно 27? (1/0): 0
| Ваше число: 26
+------------------------------------------------------------+



# Задание 5. Задача: Кофейный аппарат.


using System;

public static class Task5_CoffeeMachine
{
    private const int AMERICANO_WATER = 300;
    private const int LATTE_WATER = 30;
    private const int LATTE_MILK = 270;

    private const int AMERICANO_PRICE = 150;
    private const int LATTE_PRICE = 170;

    public static void Run()
    {
        Console.Clear();
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Задание 5: Кофейный аппарат                                |");
        Console.WriteLine("+------------------------------------------------------------+");

        int water = ReadInt("| Введите количество воды (мл): ", min: 0);
        int milk  = ReadInt("| Введите количество молока (мл): ", min: 0);

        int americanoCount = 0;
        int latteCount = 0;
        int revenue = 0;

        while (true)
        {
            bool canAmericano = water >= AMERICANO_WATER;
            bool canLatte = water >= LATTE_WATER && milk >= LATTE_MILK;

            if (!canAmericano && !canLatte)
            {
                Console.WriteLine("+------------------------------------------------------------+");
                Console.WriteLine("| Ингредиенты подошли к концу.");
                Console.WriteLine($"| Остаток воды: {water} мл");
                Console.WriteLine($"| Остаток молока: {milk} мл");
                Console.WriteLine($"| Приготовлено американо: {americanoCount}");
                Console.WriteLine($"| Приготовлено латте: {latteCount}");
                Console.WriteLine($"| Выручка: {revenue} руб.");
                Console.WriteLine("+------------------------------------------------------------+");
                Console.WriteLine("Нажмите Enter для выхода в меню...");
                Console.ReadLine();
                return;
            }

            Console.WriteLine("+------------------------------------------------------------+");
            Console.WriteLine("| Выберите напиток:");
            Console.WriteLine("| 1 - Американо (300 мл воды, 150 руб)");
            Console.WriteLine("| 2 - Латте (30 мл воды, 270 мл молока, 170 руб)");
            Console.WriteLine("| 0 - Завершить смену и показать отчёт");
            Console.Write("| > ");
            string? choice = Console.ReadLine();

            if (choice == "0")
            {
                Console.WriteLine("+------------------------------------------------------------+");
                Console.WriteLine($"| Остаток воды: {water} мл");
                Console.WriteLine($"| Остаток молока: {milk} мл");
                Console.WriteLine($"| Приготовлено американо: {americanoCount}");
                Console.WriteLine($"| Приготовлено латте: {latteCount}");
                Console.WriteLine($"| Выручка: {revenue} руб.");
                Console.WriteLine("+------------------------------------------------------------+");
                Console.WriteLine("Нажмите Enter для выхода в меню...");
                Console.ReadLine();
                return;
            }

            if (choice == "1")
            {
                if (canAmericano)
                {
                    water -= AMERICANO_WATER;
                    americanoCount++;
                    revenue += AMERICANO_PRICE;
                    Console.WriteLine($"| Ваш американо готов. Стоимость: {AMERICANO_PRICE} руб.");
                }
                else
                {
                    Console.WriteLine("| Не хватает воды для американо");
                }
            }
            else if (choice == "2")
            {
                if (canLatte)
                {
                    water -= LATTE_WATER;
                    milk  -= LATTE_MILK;
                    latteCount++;
                    revenue += LATTE_PRICE;
                    Console.WriteLine($"| Ваш латте готов. Стоимость: {LATTE_PRICE} руб.");
                }
                else
                {
                    if (water < LATTE_WATER)
                    {
                        Console.WriteLine("| Не хватает воды для латте");
                    }
                    if (milk < LATTE_MILK)
                    {
                        Console.WriteLine("| Не хватает молока для латте");
                    }
                }
            }
        }
    }

    private static int ReadInt(string prompt, int min)
    {
        while (true)
        {
            Console.Write(prompt);
            string? s = Console.ReadLine();
            if (int.TryParse(s, out int v) && v >= min)
            {
                return v;
            }
            Console.WriteLine("| Ошибка ввода. Повторите.");
        }
    }
}


# ВЫВОД задания 5.
+------------------------------------------------------------+
| Задание 5: Кофейный аппарат                                |
+------------------------------------------------------------+
| Введите количество воды (мл): 555
| Введите количество молока (мл): 4
+------------------------------------------------------------+
| Выберите напиток:
| 1 - Американо (300 мл воды, 150 руб)
| 2 - Латте (30 мл воды, 270 мл молока, 170 руб)
| 0 - Завершить смену и показать отчёт
| > 2
| Не хватает молока для латте
+------------------------------------------------------------+
| Выберите напиток:
| 1 - Американо (300 мл воды, 150 руб)
| 2 - Латте (30 мл воды, 270 мл молока, 170 руб)
| 0 - Завершить смену и показать отчёт
| > 1
| Ваш американо готов. Стоимость: 150 руб.
+------------------------------------------------------------+
| Ингредиенты подошли к концу.
| Остаток воды: 255 мл
| Остаток молока: 4 мл
| Приготовлено американо: 1
| Приготовлено латте: 0
| Выручка: 150 руб.
+------------------------------------------------------------+



# Задание 6. Задача: Лабораторный опыт.


using System;

public static class Task6_LabExperiment
{
    public static void Run()
    {
        Console.Clear();
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Задание 6: Лабораторный опыт                               |");
        Console.WriteLine("+------------------------------------------------------------+");

        int N = ReadPositiveInt("| Введите количество бактерий (N): ");
        int X = ReadPositiveInt("| Введите количество капель антибиотика (X): ");

        int bacteria = N;
        int hours = 0;
        int killPower = X * 10; // суммарная мощность в первый час

        Console.WriteLine("\n| Динамика изменения количества бактерий:");

        while (killPower > 0 && bacteria > 0)
        {
            hours++;
            bacteria *= 2; // рост
            bacteria -= killPower; // действие антибиотика
            if (bacteria < 0)
            {
                bacteria = 0;
            }

            Console.WriteLine($"| Час {hours}: Бактерий = {bacteria}, Мощность антибиотика = {Math.Max(killPower - X, 0)}");

            killPower -= X; // эффективность падает на X бактерий в час
        }

        Console.WriteLine($"\n| Процесс завершён через {hours} час(ов)");
        Console.WriteLine($"| Конечное количество бактерий: {bacteria}");
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("Нажмите Enter для выхода в меню...");
        Console.ReadLine();
    }

    private static int ReadPositiveInt(string prompt)
    {
        while (true)
        {
            Console.Write(prompt);
            if (int.TryParse(Console.ReadLine(), out int v) && v >= 0)
            {
                return v;
            }
            Console.WriteLine("| Ошибка: введите неотрицательное целое число.");
        }
    }
}


# ВЫВОД задания 6.
+------------------------------------------------------------+
| Задание 6: Лабораторный опыт                               |
+------------------------------------------------------------+
| Введите количество бактерий (N): 44
| Введите количество капель антибиотика (X): 5

| Динамика изменения количества бактерий:
| Час 1: Бактерий = 38, Мощность антибиотика = 45
| Час 2: Бактерий = 31, Мощность антибиотика = 40
| Час 3: Бактерий = 22, Мощность антибиотика = 35
| Час 4: Бактерий = 9, Мощность антибиотика = 30
| Час 5: Бактерий = 0, Мощность антибиотика = 25

| Процесс завершён через 5 час(ов)
| Конечное количество бактерий: 0
+------------------------------------------------------------+



# Задание 7. Задача: Колонизация Марса.


using System;

public static class Task7_MarsColonization
{
    public static void Run()
    {
        Console.Clear();
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("| Задание 7: Колонизация Марса                               |");
        Console.WriteLine("+------------------------------------------------------------+");

        int n = ReadPositiveInt("| Введите количество модулей (n): ");

        Console.WriteLine("| Введите размеры модуля (a b):");
        int a = ReadPositiveInt("| a > ");
        int b = ReadPositiveInt("| b > ");

        Console.WriteLine("| Введите размеры поля (h w):");
        int h = ReadPositiveInt("| h > ");
        int w = ReadPositiveInt("| w > ");

        int maxD = CalculateMaxProtection(n, a, b, h, w);
        Console.WriteLine($"| Максимальная толщина защиты: {maxD}");
        Console.WriteLine("+------------------------------------------------------------+");
        Console.WriteLine("Нажмите Enter для выхода в меню...");
        Console.ReadLine();
    }

    private static int CalculateMaxProtection(int n, int a, int b, int h, int w)
    {
        if (!CanPlaceModules(n, a, b, h, w, 0))
        {
            return -1;
        }
        int left = 0;
        int right = Math.Min(h, w) / 2;
        int result = 0;
        while (left <= right)
        {
            int mid = (left + right) / 2;
            if (CanPlaceModules(n, a, b, h, w, mid))
            {
                result = mid;
                left = mid + 1;
            }
            else
            {
                right = mid - 1;
            }
        }
        return result;
    }

    private static bool CanPlaceModules(int n, int a, int b, int h, int w, int d)
    {
        int aWithD = a + 2 * d;
        int bWithD = b + 2 * d;
        return (h >= aWithD && w >= bWithD && CanFit(n, aWithD, bWithD, h, w))
            || (h >= bWithD && w >= aWithD && CanFit(n, bWithD, aWithD, h, w));
    }

    private static bool CanFit(int n, int a, int b, int h, int w)
    {
        long perRow = w / b;
        long perCol = h / a;
        return perRow > 0 && perCol > 0 && perRow * perCol >= n;
    }

    private static int ReadPositiveInt(string prompt)
    {
        while (true)
        {
            Console.Write(prompt);
            if (int.TryParse(Console.ReadLine(), out int v) && v >= 0)
            {
                return v;
            }
            Console.WriteLine("| Ошибка: введите неотрицательное целое число.");
        }
    }
}


# ВЫВОД задания 7.
+------------------------------------------------------------+
| Задание 7: Колонизация Марса                               |
+------------------------------------------------------------+
| Введите количество модулей (n): 1
| Введите размеры модуля (a b):
| a > 3
| b > 3
| Введите размеры поля (h w):
| h > 42
| w > 42
| Максимальная толщина защиты: 19
+------------------------------------------------------------+

